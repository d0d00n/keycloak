<?php

/**
 * @file
 * Keycloak module.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_FORM_ID_alter() for openid_connect_admin_settings.
 */
function keycloak_form_openid_connect_admin_settings_alter(array &$form, FormStateInterface $form_state, $form_id) {
  // Add our own submit handler to preprocess Keycloak setting values.
  if (!$form_state->get('keycloak_processed')) {
    array_unshift($form['#submit'], 'keycloak_form_openid_connect_admin_settings_submit');
    $form_state->set('keycloak_processed', TRUE);
  }
}

/**
 * Custom submit handler to alter submitted values of the settings form.
 *
 * @param array $form
 *   An associative array containing the structure of the plugin form.
 * @param \Drupal\Core\Form\FormStateInterface $form_state
 *   The current state of the form.
 */
function keycloak_form_openid_connect_admin_settings_submit(array &$form, FormStateInterface $form_state) {
  // Whether Keycloak is enabled and we have to sanitize
  // Keycloak setting values.
  if (empty($form_state->getValue(['clients_enabled', 'keycloak']))) {
    // Don't bother with sanitizing, as the Keycloak settings won't be saved.
    return;
  }

  // Sanitize Keycloak setting values.
  $settings = $form_state->getValue(['clients', 'keycloak', 'settings']);

  // Remove trailing slashes from base URL.
  $settings['keycloak_base'] = rtrim($settings['keycloak_base'], '/ ');

  // Keycloak language mapping.
  $settings['keycloak_i18n']['enabled'] = !empty($settings['keycloak_i18n_enabled']);
  unset($settings['keycloak_i18n_enabled']);
  // Store those mappings only, that differ from default locales.
  $mappings = $settings['keycloak_i18n']['mapping'];
  $mappings_save = [];
  if (!empty($mappings)) {
    foreach ($mappings as $mapping) {
      if (empty($mapping['target']) || $mapping['langcode'] == $mapping['target']) {
        continue;
      }
      $mappings_save[] = $mapping;
    }
  }
  $settings['keycloak_i18n']['mapping'] = $mappings_save;

  $form_state->setValue(['clients', 'keycloak', 'settings'], $settings);
}
